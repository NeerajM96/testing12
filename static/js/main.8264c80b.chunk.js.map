{"version":3,"sources":["components/Counter.js","components/CounterDisplay.js","hooks/useDebouncedEffect.js","components/Container.js","index.js"],"names":["Counter","props","value","loading","maxValue","handleValueChange","className","styles","rectangle","outer_pad","negative_sign_pad","negative_sign","onClick","type","onChange","e","val","Number","target","positive_sign_pad","positive_sign","CounterDisplay","counter_text","counter_text_pad","useDebouncedEffect","effect","delay","deps","callback","useCallback","useEffect","handler","setTimeout","clearTimeout","Container","useState","setValue","setMaxValue","setLoading","fetch","method","headers","then","res","json","d","process","MAX_VALUE","data","ricky","options","body","JSON","stringify","console","log","artBoard","require","config","rootEl","document","getElementById","ReactDOM","render"],"mappings":"mKA6CeA,EA1CC,SAACC,GACf,IAAQC,EAAgDD,EAAhDC,MAAOC,EAAyCF,EAAzCE,QAASC,EAAgCH,EAAhCG,SAAUC,EAAsBJ,EAAtBI,kBAqBlC,OACE,sBAAKC,UAAS,UAAKC,IAAOC,UAAZ,YAAyBD,IAAOE,WAA9C,UACGN,EAAU,yDAAkC,KAC7C,wBACEG,UAAS,UAAKC,IAAOG,kBAAZ,YAAiCH,IAAOI,eACjDC,QAfc,WAClBP,EAAkBH,EAAQ,IAYxB,eAMA,uBAAOW,KAAK,SAASX,MAAOA,EAAOY,SAftB,SAACC,GAChB,IAAMC,EAAMC,OAAOF,EAAEG,OAAOhB,OACRG,EAAhBW,EAAMZ,EAA4BA,EACfY,MAarB,wBACEV,UAAS,UAAKC,IAAOY,kBAAZ,YAAiCZ,IAAOa,eACjDR,QA/Bc,WAIlBP,EAAkBH,EAAQ,IAyBxB,eAKU,QC7BDmB,EARQ,SAAC,GAAe,IAAbnB,EAAY,EAAZA,MACxB,OACE,qBAAKI,UAAS,UAAKC,IAAOe,aAAZ,YAA4Bf,IAAOgB,kBAAjD,SACE,iDAAoBrB,QCUXsB,EAdY,SAACC,EAAQC,EAAOC,GACzC,IAAMC,EAAWC,sBAAYJ,EAAQE,GAErCG,qBAAU,WACR,IAAMC,EAAUC,YAAW,WACzBJ,MACCF,GAEH,OAAO,WACLO,aAAaF,MAEd,CAACH,EAAUF,KCiEDQ,EAlEG,WAChB,MAA0BC,qBAA1B,mBAAOjC,EAAP,KAAckC,EAAd,KACA,EAAgCD,mBAAS,KAAzC,mBAAO/B,EAAP,KAAiBiC,EAAjB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOhC,EAAP,KAAgBmC,EAAhB,KAkDA,OAhDAR,qBAAU,WAQRS,MAjBF,8EAWkB,CACdC,OAAQ,MACRC,QAAS,CACP,eAAgB,sBAIjBC,MAAK,SAACC,GACL,OAAOA,EAAIC,UAEZF,MAAK,SAACG,GACDT,EAAJS,GAA2B,MAI7BR,EAAYS,mIAAYC,aAEzB,IAEHvB,GACE,WACEc,GAAW,GACX,IAAMU,EAAO,CACXC,MAAO/C,GAGHgD,EAAU,CACdV,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBU,KAAMC,KAAKC,UAAUL,IAEvBT,MA1CJ,qEA0CkBW,GACXR,MAAK,SAACC,GACL,OAAOA,EAAIC,UAEZF,MAAK,SAACG,GACLS,QAAQC,IAAIV,GACZP,GAAW,QAGjB,IACA,CAACpC,IAID,sBAAKI,UAAWC,IAAOiD,SAAvB,UACE,cAAC,EAAD,CACEtD,MAAOA,EACPE,SAAUA,EACVD,QAASA,EACTE,kBAAmB+B,IAErB,cAAC,EAAD,CAAgBlC,MAAOA,QCrE7BuD,EAAQ,IAAUC,SAElB,IAAMC,EAASC,SAASC,eAAe,QAClBC,IAASC,OAAO,cAAC,EAAD,IAAeJ,I","file":"static/js/main.8264c80b.chunk.js","sourcesContent":["import React from \"react\";\nimport styles from \"./Counter.scss\";\n\nconst Counter = (props) => {\n  const { value, loading, maxValue, handleValueChange } = props;\n\n  const onIncrement = () => {\n    // if (value <= maxValue) {\n      \n    // }\n    handleValueChange(value + 1);\n      \n   \n  };\n\n  const onDecrement = () => {\n    handleValueChange(value - 1);\n  };\n\n  const onChange = (e) => {\n    const val = Number(e.target.value);\n    if (val > maxValue) handleValueChange(maxValue);\n    else handleValueChange(val);\n  };\n\n  return (\n    <div className={`${styles.rectangle} ${styles.outer_pad}`}>\n      {loading ? <p>Saving counter value....</p> : null}\n      <button\n        className={`${styles.negative_sign_pad} ${styles.negative_sign}`}\n        onClick={onDecrement}\n      >\n        -\n      </button>\n      <input type=\"number\" value={value} onChange={onChange} />\n      <button\n        className={`${styles.positive_sign_pad} ${styles.positive_sign}`}\n        onClick={onIncrement}\n      >\n        +\n      </button>{\" \"}\n    </div>\n  );\n};\n\nexport default Counter;\n","import React from \"react\";\nimport styles from \"./Counter.scss\";\n\nconst CounterDisplay = ({ value }) => {\n  return (\n    <div className={`${styles.counter_text} ${styles.counter_text_pad}`}>\n      <p>Counter value : {value}</p>\n    </div>\n  );\n};\n\nexport default CounterDisplay;\n","import { useCallback, useEffect } from \"react\";\n\nconst useDebouncedEffect = (effect, delay, deps) => {\n  const callback = useCallback(effect, deps);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      callback();\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [callback, delay]);\n};\n\nexport default useDebouncedEffect;\n","import React, { useEffect, useState } from \"react\";\nimport Counter from \"./Counter\";\nimport CounterDisplay from \"./CounterDisplay\";\nimport useDebouncedEffect from \"../hooks/useDebouncedEffect\";\n\nimport styles from \"./Counter.scss\";\n\nconst getUrl =\n  \"https://interview-8e4c5-default-rtdb.firebaseio.com/front-end/counter1.json\";\nconst putUrl =\n  \"https://interview-8e4c5-default-rtdb.firebaseio.com/front-end.json\";\n\nconst Container = () => {\n  const [value, setValue] = useState();\n  const [maxValue, setMaxValue] = useState(1000);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    // set initial value using api\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    fetch(getUrl, options)\n      .then((res) => {\n        return res.json();\n      })\n      .then((d) => {\n        d ? setValue(d) : setValue(1);\n      });\n\n    if (process.env) {\n      setMaxValue(process.env.MAX_VALUE);\n    }\n  }, []);\n\n  useDebouncedEffect(\n    () => {\n      setLoading(true);\n      const data = {\n        ricky: value\n      };\n\n      const options = {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      };\n      fetch(putUrl, options)\n        .then((res) => {\n          return res.json();\n        })\n        .then((d) => {\n          console.log(d);\n          setLoading(false);\n        });\n    },\n    1000,\n    [value]\n  );\n\n  return (\n    <div className={styles.artBoard}>\n      <Counter\n        value={value}\n        maxValue={maxValue}\n        loading={loading}\n        handleValueChange={setValue}\n      />\n      <CounterDisplay value={value} />\n    </div>\n  );\n};\n\nexport default Container;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Container from \"./components/Container\";\n\nrequire(\"dotenv\").config();\n\nconst rootEl = document.getElementById(\"root\");\nconst render = () => ReactDOM.render(<Container />, rootEl);\nrender();\n"],"sourceRoot":""}